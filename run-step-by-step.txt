# This manual explains how to run step by step for arranged analysis.
#
# All scripts for the run are located on <REALLENROOT>/src
# Set the location into PATH if you want to use these scripts with short name.
# (e.g. PATH=/usr/local/reallen/src:$PATH) 
#
# Use -h option to see help document of each script.

# Please note that the read data must have been already mapped and deduplicated.# Recommended mapping tools are BWA and TMAP.
# Removing PCR duplication is important preparation.
# Using samtools is one of the easy way, and picard is also recommended.

# Before running workflow, convert BAM files to SAM files if needed.
# ('data.bam' is a name of input file in this tutorial).

samtools view -h data.bam > data.sam

# First of the workflow, filter input read data.
# filtRead.rb works only with SAM format files.
# Specify threshold values of the alignment with '-i'/'-d'/'-s' options.
# I recommend 2%-10% of the mean read length for these values.

filtRead.rb -i 5 -d 5 -s 8 -u data.sam -o data.filt.sam

# Run soft-clip split to make a FASTQ file.
# Remaining reads are saved when '-e' option is specified.
# (You should use the remaining reads for the fixed-length split step.)

splitSoftClip.rb data.filt.sam -e data.um.sam -o data.sc.fq

# Realign the reads by BWA-mem.
# Note that you must use '-a' option to keep second alignments.
# See BWA documents if you want to make BWT references.

bwa mem reference/bwa-hg19 -a data.sc.fq > data.sc_re.sam

# Filter non-specific alignments.
# The minimum distance between the first alignment and the second alignment is 
# specified with '-s' option.
# The minimum fraction of matched bases for realignment is specified with 
# '-f' option.
# These values affects the number of FPs, but I do not recommend 
# the modification

filtNonSpecific.rb -s 10 -f 0.7 data.sc_re.sam -o data.sc_ns.sam

# The test whether the read pairs are correctly located.
# The maximum distance for concordant read pair is specified with '-l' option.
# (It affects detectable minimum size of structural variations).

pairTest.rb -r -l 20 data.sc_ns.sam -o data.sc_map.sam

# Then, run fixed-length split.
# Minimum read length (bp) for this operation is specified by '-l' option.
# The cutting size (bp) is specified with '-s' option.
# This value should be less than half of the value of '-l' option, 
# but it should be more than 40 bp for accurate remapping.
# The default values are optimized for read data of 200-300 bp.

splitRead.rb -l 100 -s 45 data.um.sam -o data.um.fq

# Realign the reads by BWA-mem.

bwa mem -a reference/bwa-hg19 data.um.fq > data.um_re.sam

# Filter non-specific alignments.

filtNonSpecific.rb -s 15 -f 0.6 data.um_re.sam -o data.um_ns.sam

# Check the original distances of read pairs and use the values for 
# the pairing test in case of fixed-length split.

extractLength.rb data.um.sam -o data.um.len
pairTest.rb -r -l 20 -f data.um.lenm.len data.um_ns.sam -o data.um_map.sam

# Perform discontinuos dynamic programming (or split mapping) 
# to compute exact locations of the breakpoints.

prepDDP.rb data.um_map.sam -o data.um_ddp.pos
DDP.rb -f 0.7 reference/hg19.fa data.um.sam data.um_ddp.pos -o data.um_ddp.sam

# Merge the results of soft-clip split and that of fixed-length split.

mergeSAM.rb data.sc_map.sam data.um_ddp.sam -o data.merge.sam

# Finally classify these breakpoints, and apply counting filter.
# The default value of the counting filter is 2.
# If the read data have enough coverage, 
#  you can increase this value for decreasing FPs.
# I recommend 10%-20% of the mean coverage for this value.

filtBP.rb -r 30 data.merge.sam -o data.bp.sam -p data.bp

# 'data.bp' is a file that includes raw positions of the breakpoints.
# If you want to see in table format, use bp2table.rb for converting.
# Although this script has many options, I just show simple usage.
 
bp2table.rb -o data.csv ${rt}.bp


# Other usuful scripts are as follows:
#
# cutFa.rb : make an artifitial rearranged sequence from a FASTA file.
#
# filtFlag.rb : filter a SAM-format file by flag data.
#
# gene2bed.rb : make a region bedfile from gene names (for local detection).

